package auth

import (
	"context"
	"errors"
	"gorm.io/gorm"
	"{{.Package}}/common/logs"
	"{{.Package}}/dao"
	"{{.Package}}/model"
	"{{.Package}}/service/dto"
)

func GetById(ctx context.Context, id int64) (result *model.{{.ModelName}}, err error) {
	do := dao.Q.{{.ModelName}}
	{{.LowerModelName}}Dao := do.WithContext(ctx)

	result, err = {{.LowerModelName}}Dao.Where(do.ID.Eq(id)).First()
	if err != nil && !errors.Is(err, gorm.ErrRecordNotFound) {
		logs.Error("{{.LowerModelName}} Get by id:%v bizError:%v", id, err)
		return nil, err
	}

	return
}

func GetList(ctx context.Context, page, size int) (list []*model.{{.ModelName}}, count int64, err error) {
	dq := dao.Q.{{.ModelName}}
	{{.LowerModelName}}Dao := dq.WithContext(ctx)

	list, count, err = {{.LowerModelName}}Dao.FindByPage(dto.Page(page, size))
	if err != nil && !errors.Is(err, gorm.ErrRecordNotFound) {
		logs.Error("{{.LowerModelName}} GetList bizError:%v", err)
		return nil, 0, err
	}

	return
}

func Create(ctx context.Context, {{.LowerModelName}} *model.{{.ModelName}}) (result *model.{{.ModelName}}, err error) {
	dq := dao.Q.{{.ModelName}}
	err = dq.WithContext(ctx).Save({{.LowerModelName}})
    result = {{.LowerModelName}}
    return 
}

func Update(ctx context.Context, {{.LowerModelName}} *model.{{.ModelName}}) error {
	dq := dao.Q.{{.ModelName}}
	return dq.WithContext(ctx).Save({{.LowerModelName}})
}